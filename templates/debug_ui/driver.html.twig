<div x-data="{
    selectedPhone: null,
    token: null,
    map: null,
    userMarker: null,
    userLatLng: [0, 0],
    init() {
        $nextTick(() => this._initMap('driver-map'));
        $watch('userLatLng', (latLng) => this._moveMarker(latLng));
        $watch('userLatLng', (latLng) => this._saveLocation(latLng));
        $watch('selectedPhone', async (phone, oldPhone) => {
            if (oldPhone !== phone) {
                this.token = null;
            }

            this._login(phone);
        });
    },
    _initMap(id) {
        this.map = TaxiMap.createMap(id);

        this.map.on('click', (e) => {
            console.log(e.latlng.lat, e.latlng.lng, this);
            this.userLatLng = [e.latlng.lat, e.latlng.lng];
        });
    },
    _moveMarker(latLng) {
        if (!latLng || !this.map) {
            console.log('no coords or map');
            return;
        }

        if (!this.userMarker) {
            this.userMarker = L.marker(latLng, {icon: TaxiMap.getDriverIcon(1.5)}).addTo(this.map);
        } else {
            this.userMarker.setLatLng(new L.LatLng(...latLng));
        }

        TaxiMap.moveMap(this.map, latLng);
    },
    _saveLocation(latLng) {
        try {
            TaxiApi.saveLocation(latLng, this.token);
        } catch(e) { }
    },
    async _login(phone) {
        if (this.token) {
            return;
        }

        try {
            const {token, latLng} = await TaxiApi.login(phone);

            this.token = token;
            this.userLatLng = latLng;
        } catch(e) { }
    },
}"
     @driver-selected.window="selectedPhone = $event.detail.phone"
     @driver-removed.window="selectedPhone = null"
     class="relative h-full transition duration-300 ease-in-out"
     :class="{'opacity-25': token === null}"
>
    <div class="h-full z-0" id="driver-map"></div>

    <div x-show="token" class="absolute top-4 right-4 px-4 py-2 z-10 bg-white rounded-lg flex gap-4">
        {{ source('icons/driver-icon.svg.twig') }}

        <div class="flex flex-col justify-center gap-1">
            <div class="text-gray-500 text-xs font-semibold">Driver: </div>
            <div class="text-gray-800 font-semibold text-sm" x-text="TaxiUtils.formatPhone(selectedPhone)"></div>
        </div>
    </div>

    <div x-show="selectedPhone" class="absolute bottom-4 right-4 left-4 p-4 z-10 bg-white rounded-lg flex gap-2 justify-end">
        <button class="bg-orange-600 hover:bg-orange-800 text-white px-4 py-2 rounded-lg flex gap-2 items-center">
            <span>Go Online</span>

            {{ source('icons/online.svg.twig') }}
        </button>
    </div>
</div>
