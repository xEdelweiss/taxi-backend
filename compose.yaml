version: '3'

services:
###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./var/docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
  mongodb:
    image: mongo:${MONGO_VERSION:-7.0}
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DB:-app}
      # You should definitely change the password in production
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-!ChangeMe!}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-app}
    volumes:
      - mongodb_data:/data/db:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./var/docker/mongo/data:/data/db:rw
  osr-app:
    # https://giscience.github.io/openrouteservice/run-instance/running-with-docker
    # Activate the following lines to build the container from the repository
    # You have to add --build to the docker compose command to do so
    build:
      context: ./
    container_name: ors-app
    user: "1000:1000"
    ports:
      - "8090:8082"  # Expose the ORS API on port 8080
      - "9090:9001"  # Expose additional port for monitoring (optional)
    image: openrouteservice/openrouteservice:v8.0.0
    volumes: # Mount relative directories. ONLY for local container runtime. To switch to docker managed volumes see 'Docker Volumes configuration' section below.
      - ./var/ors-docker:/home/ors  # Mount the ORS application directory (for logs, graphs, elevation_cache, etc.) into its own directory
    environment:
      REBUILD_GRAPHS: False  # Set to True to rebuild graphs on container start.
      CONTAINER_LOG_LEVEL: INFO  # Log level for the container. Possible values: DEBUG, INFO, WARNING, ERROR, CRITICAL
      XMS: 1g  # start RAM assigned to java
      XMX: 2g  # max RAM assigned to java. Rule of Thumb: <PBF-size> * <profiles> * 2
      ADDITIONAL_JAVA_OPTS: ""  # further options you want to pass to the java command

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  mongodb_data:
